spring:
  main:
    banner-mode: off
  jpa:
    generate-ddl: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL95Dialect
        jdbc:
          lob:
            non_contextual_creation: true
  batch:
    initialize-schema: always
  datasource:
    platform: postgres
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}

graphql:
  servlet:
    maxQueryDepth: 5

graphiql:
  subscriptions:
    timeout: 30000

jwt:
  secret: ${JWT_SECRET}
  issuer: ${JWT_ISSUER}
  password-strength: ${JWT_PASSWORD_STRENGTH}
  expiration-hours: ${JWT_EXPIRATION_HOURS}

imgur:
  client-id: ${IMGUR_CLIENT_ID}
  client-secret: ${IMGUR_CLIENT_SECRET}
  refresh-token: ${IMGUR_REFRESH_TOKEN}
  access-token: ${IMGUR_ACCESS_TOKEN}
  album-delete-hash: ${IMGUR_ALBUM_DELETE_HASH}
